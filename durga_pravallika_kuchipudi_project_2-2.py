# -*- coding: utf-8 -*-
"""Durga_Pravallika_Kuchipudi_Project_2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/github/Dpravakuchipudi/GitHubGraduation-2022/blob/main/Durga_Pravallika_Kuchipudi_Project_2.ipynb
"""

# @title
from google.colab import drive

# Mount Google Drive
drive.mount('/content/drive')

# @title
import pandas as pd

# Load the dataset
file_path = '/content/drive/MyDrive/Viz_Proj/athlete_events.csv'
athlete_data = pd.read_csv(file_path)

# Display the first few rows of the dataframe
athlete_data.head()

"""# Title : **"The Dynamic Olympics: Exploring Changes in Athlete Profiles, Sporting Excellence, and Medal Patterns"**

*** Introduction ***

The Olympic Games, as a celebration of human athleticism and international unity, have captured the imagination of the world for over a century. From its modest beginnings in Athens in 1896 to the grand global spectacles of recent times, the Olympics have been a testament to the enduring spirit of competition, diversity, and excellence. This historical dataset, meticulously compiled from www.sports-reference.com and made available in May 2018, offers a comprehensive glimpse into the evolution of the modern Olympic Games, spanning from the inaugural Athens Games in 1896 to the summer event in Rio de Janeiro in 2016.

One of the most striking aspects of the Olympic Games is its ability to mirror the shifting sands of history and society. As we delve into this dataset, we gain insights not only into the athletic prowess of individuals but also the broader trends that have shaped the Games. From the early days when the Summer and Winter Games were held in the same year to the subsequent staggered scheduling, we witness how the Olympics adapt to the changing dynamics of the world.

At the heart of this dataset are the individual athletes, each row representing a unique individual competing in Olympic events. The columns provide a wealth of information, from basic demographics such as age, sex, height, and weight to crucial details like the athlete's country of representation (National Olympic Committee or NOC), the year and season of the Games, the host city, and the specific sport and event they participated in. Furthermore, the dataset captures the pinnacle of an athlete's achievement with medals, denoting Gold, Silver, Bronze, or the absence thereof (NA).

This dataset invites us to explore a multitude of questions and avenues of inquiry regarding the Olympics' evolution. It allows us to scrutinize the changing demographics of athletes, including the participation and performance of women, the ebb and flow of nations' prowess on the world stage, and the enduring popularity and evolution of various sports and events. By harnessing the power of data analysis, we can uncover trends, patterns, and insights that shed light on the broader societal, cultural, and geopolitical shifts that have left their mark on the Olympic Games.

In this exploration, we not only pay homage to the countless athletes who have dedicated themselves to the pursuit of excellence on the Olympic stage but also acknowledge the invaluable contributions of the passionate Olympic history enthusiasts and 'statistorians' whose dedication made this dataset available. Together, we embark on a journey through the annals of Olympic history, using data as our guide to unravel the fascinating story of the Games' transformation and continuity over time.

1. "Dynamic Evolution of Global Olympic Medal Distribution: An Animated Globe Visualization Across Olympic Years"
"""

# @title
import plotly.express as px

# Group by country and calculate total medal counts
country_medals = athlete_data.groupby(['Year', 'NOC'])['Medal'].count().reset_index()

# Create an animated choropleth map
fig_choropleth = px.choropleth(country_medals,
                               locations='NOC',
                               locationmode='ISO-3',
                               color='Medal',
                               hover_name='NOC',
                               animation_frame='Year',  # Use the 'Year' column for animation
                               title='Total Medal Count by Country Over Time',
                               labels={'Medal': 'Total Medals', 'NOC': 'Country'},
                               height=500)

# Set the color scale and color bar title
fig_choropleth.update_traces(marker_line_width=0.2,
                             marker_line_color='white')
fig_choropleth.update_geos(projection_type="natural earth")

# Show the animated choropleth map
fig_choropleth.show()

"""This animated globe likely visualizes the distribution and count of Olympic medals won by countries across different Olympic years. A color gradient, from purple to red, indicates the number of medals, with red representing a higher medal count. The slider below the globe is set to the year 1912, suggesting that the user can slide through the years to see changes in the medal distribution over time, which would animate the map to reflect the data of the selected year. This type of visualization can provide a quick and intuitive understanding of global Olympic medal trends.

2. "Temporal Analysis of United States' Olympic Medal Performance: A Dynamic Bar Chart Visualization Across Olympic Years"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
file_path = '/content/drive/MyDrive/Viz_Proj/athlete_events.csv'  # Replace with your actual file path
athlete_data = pd.read_csv(file_path)

# Select a specific NOC (country) to track its medal count over time
selected_noc = 'USA'  # Replace with the NOC of your choice

# Filter the data for the selected NOC
filtered_data = athlete_data[athlete_data['NOC'] == selected_noc]

# Group the data by Year and count the medals for each year
medal_counts = filtered_data.groupby('Year')['Medal'].count().reset_index()

# Create an animated bar chart
fig = px.bar(medal_counts, x='Year', y='Medal', animation_frame='Year',
             title=f'Medal Count Over Time for {selected_noc}',
             labels={'Year': 'Year', 'Medal': 'Total Medals'},
             range_x=[medal_counts['Year'].min(), medal_counts['Year'].max()],
             height=400)

# Show the animated chart
fig.show()

"""This particular visualization shows a bar chart of the United States' Olympic medals over time, with a slider that can be adjusted to different years. The slider in the image is set to the year 1920. This indicates that the chart is dynamic, and sliding through the years would animate the chart to show the change in the number of medals won by the USA in different Olympic years. Itâ€™s a useful tool for examining trends in Olympic performance for the USA.

3. "Exploring Olympic Medal Trends: Dynamic Bar Chart Comparing Country Performances Over Time"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
file_path = '/content/drive/MyDrive/Viz_Proj/athlete_events.csv'  # Replace with your actual file path
athlete_data = pd.read_csv(file_path)

# Group by year and country to calculate the total medal count
country_medals = athlete_data.groupby(['Year', 'NOC'])['Medal'].count().reset_index()

# Create an animated bar chart
fig = px.bar(country_medals, x='NOC', y='Medal', animation_frame='Year', animation_group='NOC',
             title='Total Medal Count by Country Over Time',
             labels={'Medal': 'Total Medals', 'NOC': 'Country'},
             height=500)

# Customize the layout of the chart
fig.update_layout(xaxis={'categoryorder': 'total descending'})
fig.update_traces(marker_color='gold')

# Show the animated bar chart
fig.show()

"""--> It features a bar chart that displays the total Olympic medals won by various countries in a specific year, which in this screenshot is set to 1996. The countries are listed on the x-axis, and the total medals are represented on the y-axis.

--> Below the bar chart, there is a slider that can be adjusted to different years. As the slider is moved, the bar chart would animate to show the medal counts for the selected year. This allows for an easy comparison of the performance of different countries in the Olympics over time and demonstrates how the medal tallies have changed from one Olympic year to another. The chart is a handy tool for identifying trends, peaks, and troughs in a country's Olympic medal haul.

4. "Exploring Athlete Physiques in the Olympics: A Scatter Plot Analysis Reveals Diverse Body Types, Correlation Trends, and Sport-Specific Clusters"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
file_path = '/content/drive/MyDrive/Viz_Proj/athlete_events.csv'  # Replace with your actual file path
athlete_data = pd.read_csv(file_path)

# Filter out rows where the athlete has won at least one medal
medalists_data = athlete_data[athlete_data['Medal'].notna()]

# Create a scatter plot with height, weight, and color-coded by sport
fig = px.scatter(medalists_data, x='Height', y='Weight', color='Sport',
                 title='Relationship Between Height, Weight, and Medals',
                 labels={'Height': 'Height (cm)', 'Weight': 'Weight (kg)'},
                 hover_data=['Name', 'Medal'])

# Customize the layout of the chart
fig.update_traces(marker=dict(size=6, opacity=0.7))

# Show the scatter plot
fig.show()

"""Analysis:

--> Diverse Athlete Physiques: The scatter plot showcases a wide range of athlete body types across different Olympic sports, indicating that successful Olympians come in all shapes and sizes, which correspond to the varied demands of each sport.

--> Correlation Trends: There appears to be a general positive correlation between height and weight across the dataset, suggesting that taller athletes tend to be heavier, which might be an advantage in certain sports.
Sport-Specific Clusters: Different sports show distinct clusters within the plot. For example, weight categories in sports like boxing or weightlifting may create dense clusters, while sports such as basketball may exhibit clusters of taller individuals.

-->Medal Distribution Insight: While the plot indicates the physical attributes of medalists across sports, the density and distribution of medals do not seem to be concentrated in any particular region of the plot, implying that success in Olympic sports is not solely dependent on an athlete's height and weight

5. ""Unveiling Gender Dynamics in Olympic Participation: Analyzing Trends and Progress Toward Equality Over Time"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Group by year and gender, and count the number of athletes
participation_data = athlete_data.groupby(['Year', 'Sex']).size().reset_index(name='count')

# Create a line chart to show the trend in the number of participating athletes over the years by gender
fig_line_chart = px.line(participation_data, x='Year', y='count', color='Sex', markers=True,
                         title='Participation Trends by Gender Over the Years',
                         labels={'Year': 'Year', 'count': 'Number of Athletes'},
                         height=500)

# Create a stacked area chart to illustrate the growth of athlete participation by gender
fig_stacked_area = px.area(participation_data, x='Year', y='count', color='Sex',
                           title='Growth of Athlete Participation by Gender',
                           labels={'Year': 'Year', 'count': 'Number of Athletes'},
                           height=500)

# Show the line chart and stacked area chart
fig_line_chart.show()
fig_stacked_area.show()

"""** For the first plot

--> Increasing Female Participation: The line graph shows a clear upward trend in female participation at the Olympics over time, indicating progress in gender diversity and inclusion in the games.

--> Male Dominance Persistence: Despite the growth in female participation, male athletes have consistently been present in higher numbers, suggesting a persistent gender gap in Olympic participation.


** For the second plot

--> Increasing Trend in Female Participation: The female participation (depicted by the pink area and line) shows a significant upward trend from the early 1900s to the 2000s. This suggests a positive movement toward gender equality in athlete participation at the Olympics or a similar international sporting event. There's a notable increase in the rate of this growth starting around the 1980s, which could indicate effective policy changes or societal shifts allowing for greater inclusion of women in sports.


--> Periodic Fluctuations in Male Participation: The male participation (depicted by the blue area and line) also shows an overall increase, but with periodic sharp declines that recover quickly. These fluctuations could correspond to specific historical events that temporarily affected male athlete participation, such as wars or boycotts. It's also noticeable that the male participation line exhibits a higher frequency of these fluctuations compared to the female line, which might point to a larger impact of external factors on male participation in the events charted.
"""

# @title
!pip install dash

# @title
import pandas as pd
import plotly.express as px
import dash
from dash import dcc, html
from dash.dependencies import Input, Output

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Initialize the Dash app
app = dash.Dash(__name__)

# Define the layout of the app
app.layout = html.Div([
    dcc.Dropdown(
        id='year-dropdown',
        options=[
            {'label': str(year), 'value': year}
            for year in sorted(athlete_data['Year'].unique())  # Create options for all unique years
        ],
        multi=True,  # Allow multiple selections
        value=[2020, 2024]  # Default selected years
    ),
    dcc.Graph(id='bar-chart')
])

# Define callback to update the bar chart based on selected years
@app.callback(
    Output('bar-chart', 'figure'),
    [Input('year-dropdown', 'value')]
)
def update_bar_chart(selected_years):
    # Filter the dataset based on selected years
    filtered_data = athlete_data[athlete_data['Year'].isin(selected_years)]

    # Group by country and calculate total medal counts
    country_medals = filtered_data.groupby('NOC')['Medal'].count().reset_index()

    # Sort the countries by total medal count in descending order
    country_medals = country_medals.sort_values(by='Medal', ascending=False)

    # Create the horizontal bar chart
    fig = px.bar(country_medals.head(10),
                 x='Medal',
                 y='NOC',
                 orientation='h',
                 title='Top-Performing Countries by Total Medal Count',
                 labels={'Medal': 'Total Medals', 'NOC': 'Country'},
                 height=500)

    return fig

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)

"""6. "Age Trends in Competitive Sports: Analyzing Athlete Demographics Across Swimming, Athletics, and Gymnastics"
"""

# @title
import pandas as pd
import plotly.express as px
import matplotlib.pyplot as plt

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# List of specific sports for which you want to display age distributions
selected_sports = ['Swimming', 'Athletics', 'Gymnastics']

# Loop through the selected sports and create age distribution histograms
for sport in selected_sports:
    # Filter the dataset based on the selected sport
    filtered_data = athlete_data[athlete_data['Sport'] == sport]

    # Create the age histogram using Plotly Express
    fig = px.histogram(filtered_data,
                       x='Age',
                       title=f'Age Distribution in {sport}',
                       labels={'Age': 'Age', 'count': 'Number of Athletes'},
                       height=400)

    # Show the age distribution plot
    fig.show()

"""*** For the first one

---> Peak at Younger Age: The distribution peaks at around age 20, indicating that the highest number of swimmers is at this age. This suggests that competitive swimming might be most popular among younger adults, possibly because physical performance in swimming could be at its peak during these years.

---> Rapid Decline After Peak: After the peak at age 20, there is a rapid decline in the count of swimmers as age increases. This could imply that swimming, at a competitive level, is a sport that typically sees athletes peak at a young age, with fewer remaining active in the sport as they grow older, which may be due to the physical demands of competitive swimming or athletes transitioning to other careers or roles within the sport.

*** For the second one

---> Most Common Age Range: The majority of athletes are concentrated in the age range of approximately 20 to 25 years old. This is the highest peak on the graph, indicating that this is the most common age range for athletes in the sport.

--> Decline After Mid-20s: There is a gradual decline in the number of athletes as age increases beyond the mid-20s. The representation of athletes in their late 20s and beyond decreases steadily, suggesting that fewer athletes compete at older ages.

*** For the third one

--> Youth Dominance: There is a significant concentration of gymnasts in the younger age groups, particularly around ages 15 to 20. This suggests that gymnastics is a sport where younger athletes are more prevalent, which may reflect the high agility, flexibility, and strength required, traits that are often more pronounced in younger individuals.

--> Sharp Decline After Peak Age: The number of gymnasts declines sharply as age increases past the early 20s. This indicates that there are fewer older gymnasts, possibly due to the physical demands of the sport that favor younger participants with peak physical conditions suited for gymnastic competition.

7. "Diverse Age Landscapes in Sports: Analyzing Age Distribution Variability, Peaks, and Extremes Across Athletic Disciplines"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Create a box plot to visualize age distribution by sport type
fig = px.box(athlete_data,
             x='Sport',
             y='Age',
             title='Age Distribution by Sport',
             labels={'Age': 'Age', 'Sport': 'Sport'},
             points='all',  # Show individual data points
             height=600)

# Show the box plot
fig.show()

"""---> Variability Across Sports: Different sports show varying age distributions, with some sports having a wider range of ages among participants and others showing a concentration of athletes within a narrower age range. Sports with wider age ranges might offer longer career spans or have different competition levels that accommodate a broader spectrum of ages.

--> Age Peaks and Extremes: Certain sports have higher median ages, indicating they might be more suitable for or dominated by older athletes, while others have lower median ages, which could suggest a preference for younger athletes possibly due to the physical demands or the culture of the sport. The dots that appear as outliers indicate the presence of athletes who are significantly younger or older than the typical age range for their sport

8."Diverse Athlete Physiques: Exploring the Range of Heights and Weights among Gold Medalists in Different Olympic Sports"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Filter the dataset to include only rows with medals
medalists_data = athlete_data[athlete_data['Medal'].notna()]

# Create a scatterplot for athlete height vs. weight, color-coded by medal status and grouped by sport
fig = px.scatter(medalists_data,
                 x='Height',
                 y='Weight',
                 color='Medal',
                 symbol='Sport',
                 title='Athlete Height vs. Weight by Medal Status and Sport',
                 labels={'Height': 'Height (cm)', 'Weight': 'Weight (kg)', 'Medal': 'Medal Status'},
                 height=600)

# Show the scatterplot
fig.show()

"""--> Variety in Athlete Body Types: The plot shows a wide range of heights and weights, indicating that successful athletes in different sports have varied body types. For example, gold medalists in gymnastics tend to be shorter and lighter, whereas those in sports like rowing and ice hockey tend to be taller and heavier.

9. "Gender Disparities in Athlete Physiques: Exploring Height and Weight Variations Across Sports"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Create a box plot for height distribution by sport and gender
fig_box_height = px.box(athlete_data, x='Sport', y='Height', color='Sex', title='Height Distribution by Sport and Gender')
fig_box_height.update_xaxes(categoryorder='total ascending')

# Create a violin plot for weight distribution by sport and gender
fig_violin_weight = px.violin(athlete_data, x='Sport', y='Weight', color='Sex', title='Weight Distribution by Sport and Gender')
fig_violin_weight.update_xaxes(categoryorder='total ascending')

# Show the box and violin plots side by side
fig_box_height.show()
fig_violin_weight.show()

"""** for first one **

--> Gender Height Differences: Across most sports, male athletes (blue) tend to have a higher median height compared to female athletes (red). This is consistent with general biological differences in stature between the sexes.

--> Sport-Specific Height Ranges: Different sports show varying ranges of height for athletes, with some sports like basketball showing a generally taller height range for both males and females. This indicates that certain physical attributes, such as height, can be more advantageous in specific sports.

** for second one **

--> Gender Weight Differences: Similar to height, there are noticeable differences in weight distribution between male (blue) and female (red) athletes across various sports. In general, male athletes have a higher median weight compared to their female counterparts.

--> Sport-Specific Weight Profiles: Athletes in different sports show diverse weight profiles, reflecting the physical demands and characteristics advantageous to those sports. For example, sports like weightlifting and rugby show a higher weight range, indicating that greater mass might be beneficial or required, while sports like gymnastics show a lower weight range, likely due to the emphasis on agility and flexibility.

10. "Gender Disparities in Medal Distribution: A Comparison of Male and Female Athletes' Medal Counts Across Sports in the 2000 Olympics"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Filter the dataset for a specific Olympics year
selected_year = 2000  # Replace with the year you want to analyze
filtered_data = athlete_data[athlete_data['Year'] == selected_year]

# Group by sport and gender, count the number of medals for each combination
medal_counts = filtered_data.groupby(['Sport', 'Sex'])['Medal'].count().reset_index()

# Create the stacked bar chart
fig_stacked_bar = px.bar(medal_counts,
                        x='Sport',
                        y='Medal',
                        color='Sex',
                        title=f'Distribution of Medals by Gender in {selected_year} Olympics',
                        labels={'Medal': 'Number of Medals', 'Sport': 'Sport'},
                        height=600,
                        barmode='stack')

# Show the stacked bar chart
fig_stacked_bar.show()

"""--> The bar chart shows that male athletes (represented by the red bars) won more medals than female athletes (blue bars) in the majority of the sports during the 2000 Olympics, indicating a gender disparity in medal distribution across the sports featured.

-->Certain sports such as gymnastics and diving show a higher number of medals for female athletes compared to male athletes, suggesting that these disciplines were either more competitive among women or offered more medal opportunities for female competitors in the 2000 Olympics.

11. "Medal Disparities Across Olympic Sports: A Comparative Analysis of Male and Female Athlete Performances"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Group by Sport and Sex to get the medal counts
medal_counts = athlete_data.groupby(['Sport', 'Sex'])['Medal'].count().reset_index()

# Create a stacked bar chart
fig_stacked_bar = px.bar(medal_counts,
                        x='Sport',
                        y='Medal',
                        color='Sex',
                        title='Distribution of Medals by Gender Across All Years',
                        labels={'Medal': 'Number of Medals', 'Sport': 'Sport'},
                        height=600,
                        barmode='stack')

fig_stacked_bar.show()

"""---> Athletics is the sport with the highest number of medals won, with male athletes (shown in red) having significantly more than female athletes (shown in blue). The tooltip indicates that male athletes have won a total of 2,694 medals in athletics over the years.

---> In most sports, the number of medals won by male athletes surpasses those won by female athletes. This could reflect a variety of factors, including historical differences in participation rates, the number of events available to each gender, and changes in the Olympics over time.

12. "Exploring Physiological Trends and Sport-Specific Attributes: Correlations Between Height, Weight, and Age in Olympic Athletes"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Filter data to include only medalists
medalists_data = athlete_data[athlete_data['Medal'].notnull()]

# Create a scatterplot matrix using Plotly Express
scatter_matrix = px.scatter_matrix(
    medalists_data,
    dimensions=['Height', 'Weight', 'Age'],
    color='Sport',
    title='Scatterplot Matrix for Medalists (Height vs. Weight vs. Age)',
    labels={'Height': 'Height (cm)', 'Weight': 'Weight (kg)', 'Age': 'Age (years)'},
    height=800
)

scatter_matrix.update_traces(marker=dict(size=5), diagonal_visible=False)

scatter_matrix.show()

"""--> There is a positive correlation between height and weight across the sports; as the height of the athletes increases, their weight tends to increase as well. This is a common physiological trend, as taller individuals generally have more body mass.


--> The distribution of age, weight, and height varies across different sports. For example, sports like gymnastics might have clusters of younger athletes with lower weight and height, while sports like basketball may show clusters of taller and possibly heavier athletes. The diversity of these attributes reflects the different physical demands and characteristics favored in each sport.

13. "Common Physique Traits Among Olympic Medalists: Analyzing Height and Weight Trends in Successful Athletes"
"""

# @title
import pandas as pd
import plotly.graph_objects as go

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Filter data to include only medalists
medalists_data = athlete_data[athlete_data['Medal'].notnull()]

# Create a parallel coordinates plot
fig = go.Figure(data=go.Parcoords(
    line=dict(color=medalists_data['Age'], colorscale='Viridis'),
    dimensions=[
        dict(label='Height (cm)', values=medalists_data['Height']),
        dict(label='Weight (kg)', values=medalists_data['Weight']),
        dict(label='Age (years)', values=medalists_data['Age'])
    ]
))

# Add color based on medal status
fig.update_traces(
    marker=dict(color=medalists_data['Medal'], colorscale='Viridis', showscale=True),
    selector=dict(type='scatter', mode='lines')
)

# Customize the layout
fig.update_layout(
    title='Parallel Coordinates Plot for Medalists',
    xaxis=dict(tickvals=[0, 1, 2], ticktext=['Height', 'Weight', 'Age'])
)

# Show the parallel coordinates plot
fig.show()

"""-->There's a large concentration of medalists in a band of height approximately between 170 and 190 cm and weight roughly between 60 and 90 kg, suggesting that this is a common physique among Olympic medalists across various sports.

--> As age increases, there seems to be a trend towards lower weights and heights. This could be due to older athletes being from sports that do not require as much height and weight, or it could be reflecting a generational trend where athletes from earlier eras were generally smaller.

14. "Medal Distribution Heatmap: Visualizing Olympic Medal Counts by NOC and Year"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Group by NOC and Year and count the number of medals
medal_counts = athlete_data.groupby(['NOC', 'Year'])['Medal'].count().reset_index()

# Pivot the data to create a matrix for the heatmap
heatmap_data = medal_counts.pivot(index='NOC', columns='Year', values='Medal').fillna(0)

# Create a heatmap using Plotly Express
fig = px.imshow(heatmap_data,
                labels=dict(x="Year", y="NOC", color="Medal Count"),
                x=heatmap_data.columns,
                y=heatmap_data.index,
                color_continuous_scale="Viridis",  # You can change the color scale
                title="NOC Performance Over Time (Heatmap)")

# Customize the layout
fig.update_layout(
    xaxis_nticks=len(heatmap_data.columns),
    yaxis_nticks=len(heatmap_data.index),
    xaxis_title="Year",
    yaxis_title="NOC",
    xaxis_side="top",  # Place the x-axis labels at the top
    width=900,  # Adjust the width of the heatmap
    height=500,  # Adjust the height of the heatmap
)

# Show the heatmap
fig.show()

"""--> There is a tooltip visible in the image that shows the year 1948, NOC code 'CPV' with a medal count of 0. This indicates that the NOC represented by 'CPV' did not win any medals in the 1948 Olympic Games.

--> The color gradient, which likely represents the number of medals won, ranges from dark purple (indicating no medals) to bright yellow or green (indicating a higher count of medals). The vast majority of the heatmap is dark purple, suggesting that most NOCs win few or no medals, while only a few NOCs win a large number of medals, as indicated by the sparse bright-colored areas.

15. "Diversity in NOC Participation: Analyzing the Range of Sports and Events Engaged in by National Olympic Committees"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Calculate the number of unique sports and events per NOC
unique_sports_events_counts = athlete_data.groupby('NOC').agg(
    unique_sports=('Sport', 'nunique'),
    unique_events=('Event', 'nunique')
).reset_index()

# Sort NOCs by the total number of unique sports and events
unique_sports_events_counts['total_unique'] = unique_sports_events_counts['unique_sports'] + unique_sports_events_counts['unique_events']
unique_sports_events_counts = unique_sports_events_counts.sort_values(by='total_unique', ascending=False)

# Create a stacked bar chart
fig = px.bar(
    unique_sports_events_counts,
    x='NOC',
    y=['unique_sports', 'unique_events'],
    title='Variety of Sports and Events Participated by NOCs',
    labels={'NOC': 'NOC Code', 'value': 'Count'},
    color_discrete_map={'unique_sports': 'blue', 'unique_events': 'red'},
)

# Customize the layout
fig.update_layout(
    xaxis_title='NOC Code',
    yaxis_title='Count',
    barmode='stack',  # Stacked bar chart
)

# Show the stacked bar chart
fig.show()

"""---> The NOC represented by the first bar on the left side has participated in the highest number of unique sports compared to others, also showing a high count in unique events, indicating a broad engagement in Olympic sports and events.

---> There's a clear trend showing that fewer NOCs participate in a large variety of sports and events. As we move from left to right, the number of sports and events participated in by each NOC decreases, illustrating the variance in participation levels among different NOCs. Some may specialize or have the resources to engage in many sports, while others may have a narrower focus.

16."Interactive Medal Count Visualization: Exploring Olympic Medal Trends by Country and Year"
"""

# @title
import pandas as pd
import matplotlib.pyplot as plt
from ipywidgets import interact
import ipywidgets as widgets

# Load your dataset into a DataFrame
# athlete_data = pd.read_csv('your_dataset.csv')

# Define a function to update and display the line chart
def update_line_chart(country, max_year):
    filtered_data = athlete_data[(athlete_data['NOC'] == country) & (athlete_data['Year'] <= max_year)]
    medal_count = filtered_data.groupby('Year')['Medal'].count()

    plt.figure(figsize=(10, 6))
    plt.plot(medal_count.index, medal_count.values, marker='o')
    plt.xlabel('Year')
    plt.ylabel('Medal Count')
    plt.title(f'Medal Count Over Time for {country}')
    plt.grid(True)
    plt.show()

# Create a list of unique countries and years
countries_list = athlete_data['NOC'].unique()
max_year_value = athlete_data['Year'].max()

# Create interactive widgets for country selection and year slider
country_dropdown = widgets.Dropdown(options=countries_list, description='Country:')
year_slider = widgets.IntSlider(min=athlete_data['Year'].min(), max=max_year_value, step=1, value=athlete_data['Year'].min(), description='Year:')

# Create an interactive function that updates the line chart
def interactive_line_chart(country, year):
    update_line_chart(country, year)

# Display the interactive widgets
interact(interactive_line_chart, country=country_dropdown, year=year_slider)

"""** The dropdown menu allows for the selection of different country codes, which would update the chart to reflect the medal count for the selected country over time. The slider, set at the year 2016 in the screenshot, suggests that you can adjust the range of years you're interested in viewing. These interactive elements make it easier to explore and visualize data across different dimensions (in this case, time and country) without having to regenerate the chart manually for each query.


--->  There seems to be a notable peak around 2008, which may correlate with the Beijing Olympics. If you need assistance analyzing the data, creating similar visualizations, or any other inquiries related to this image, feel free to ask!

17. "Comparative Analysis of Olympic Medal Counts: A Dynamic Visualization of USA and China's Historical Performances"
"""

# @title
import pandas as pd
import plotly.express as px

# Load your dataset into a DataFrame
file_path = '/content/drive/MyDrive/Viz_Proj/athlete_events.csv'  # Replace with your actual file path
athlete_data = pd.read_csv(file_path)

# Filter the DataFrame to select two countries of interest
country1 = 'USA'  # Replace with your first country of choice
country2 = 'CHN'  # Replace with your second country of choice

filtered_data = athlete_data[(athlete_data['NOC'] == country1) | (athlete_data['NOC'] == country2)]

# Group by year and country, calculate medal counts
medal_counts = filtered_data.groupby(['Year', 'NOC'])['Medal'].count().reset_index()

# Create a side-by-side bar chart
fig = px.bar(medal_counts, x='Year', y='Medal', color='NOC',
             title=f'Medal Tally Comparison ({country1} vs. {country2})',
             labels={'Year': 'Year', 'Medal': 'Total Medals'},
             height=400)

fig.update_layout(barmode='group')

# Show the chart
fig.show()

"""--> The bar chart visualizes the historical Olympic medal counts of the USA and China, indicating that the USA has generally won more medals, but China has had a significant increase in recent years.

--> The interactivity of the chart suggests users can alter the display by changing the selected countries or year range to compare different data sets.

Advantages of Interactive Visualizations:

1. Enhanced Data Exploration: Interactive visualizations empower users to delve deeper into the data by allowing customization of variables such as the selected countries and the range of years. This flexibility enables users to focus on specific aspects of Olympic performance, facilitating a more comprehensive analysis.

2. Real-Time Updates: Interactive tools can be updated with the latest data, making them suitable for tracking ongoing events like the Olympics. Users can stay informed about the most recent medal standings and trends.
Comparative Analysis: These visualizations enable easy comparisons between different countries, revealing historical performance disparities and shifts in dominance. Users can gain a deeper understanding of the dynamic nature of Olympic competition.

Drawbacks and Interpretation Risks:

1. Limited Context: Interactive visualizations often present data without comprehensive contextual information. Users may lack background knowledge about historical events or policy changes that could influence medal counts, potentially leading to misinterpretations.

2. Overemphasis on Medal Count: The focus on medal counts alone may oversimplify the complexities of Olympic performance. Factors like athlete demographics, sporting events, and geopolitical influences are not always captured in these visualizations.

3. Misleading Trends: Without proper guidance, users may draw incorrect conclusions from the data. For example, an increase in medal count over time may not necessarily indicate improved performance but could result from changes in the number of events or countries participating.

Mitigating Interpretation Risks:

1.Contextual Information: Accompany interactive visualizations with informative text, annotations, or tooltips to provide context. Explain historical events, policy changes, or anomalies that might affect the data.

2.Supplementary Data: Offer supplementary data sources or links to additional information to encourage users to conduct more in-depth research and validate their interpretations.

3.Use of Data Experts: Collaborate with data analysts or domain experts to ensure the accuracy and meaningfulness of the visualizations. Their insights can help users avoid misinterpretations.

Conclusion:


Interactive Olympic medal count visualizations offer valuable opportunities for data exploration and analysis, but they must be approached with caution. By providing context, supplementary data, and expert input, the potential drawbacks and interpretation risks can be mitigated, allowing users to make informed and accurate conclusions about historical Olympic performance trends.
"""